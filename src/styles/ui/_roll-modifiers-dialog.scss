.roll-modifiers-dialog {
    background: none;
    box-shadow: none;

    .window-header {
        @include inset-gold-border;
        background: linear-gradient(
            90deg,
            var(--secondary) 0%,
            lighten($secondary-color, 10) 50%,
            var(--secondary) 100%
        );
        border-radius: 0;
        margin-bottom: 2px;
        font-size: var(--font-size-13);
    }

    .window-content {
        @include corner-boxes;
        padding-top: 0;
    }

    button {
        @include button;
        background-color: var(--alt);
        border-radius: 2px;
        color: var(--text-light);
        cursor: pointer;
        font-family: var(--sans-serif);

        &:hover {
            text-shadow: 0 0 2px var(--tertiary);
        }
    }

    .toggle {
        background: var(--secondary);
        border-radius: 50px;
        box-shadow:
            inset 0px 1px 1px rgba(0, 0, 0, 0.5),
            0px 1px 0px rgba(255, 255, 255, 0.2);
        cursor: pointer;
        display: inline-block;
        height: 19px;
        position: relative;
        vertical-align: bottom;
        width: 46px;

        &::before {
            color: var(--text-light);
            content: "ON";
            left: 6px;
            position: absolute;
            z-index: 0;
        }

        &::after {
            color: var(--text-dark);
            content: "OFF";
            position: absolute;
            right: 4px;
            text-shadow: 1px 1px 0px rgba(255, 255, 255, 0.15);
            z-index: 0;
        }

        &::after,
        &::before {
            @include micro;
            top: 4px;
        }

        .widget {
            background: #fcfff4;
            background: linear-gradient(to bottom, #fcfff4 0%, #dfe5d7 40%, #b3bead 100%);
            border-radius: 50px;
            box-shadow:
                0 0 0 1px rgba(black, 0.2),
                0px 2px 5px 0px rgba(0, 0, 0, 0.3);
            cursor: pointer;
            display: block;
            height: 16px;
            position: absolute;
            right: 1px;
            top: 1px;
            transition: all 0.4s ease;
            width: 19px;
            z-index: 1;
        }

        input[type="checkbox"] {
            visibility: hidden;
            &:not(:checked) + .widget {
                right: 23px;
            }
        }
    }

    .dialog-row {
        align-items: center;
        display: flex;
        padding: 0.5rem 0;
        gap: 0.5rem;

        .mod {
            flex: 1.5 0 0;
        }

        .type {
            flex: 0 0 6.25rem;
            text-transform: capitalize;
        }

        .value {
            flex: 0 0 36px;
            display: flex;
            justify-content: center;
        }

        .exclude {
            flex: 0 0 50px;
        }

        &.header {
            font-size: var(--font-size-13);
            font-weight: 700;
            padding-bottom: 0;

            & + hr {
                margin-bottom: 0;
            }
        }

        &.disabled {
            text-decoration: line-through;

            & > * {
                filter: opacity(0.5);

                i {
                    color: var(--text-dark);
                }
            }

            .toggle {
                background: rgba(black, 0.4);
                input[type="checkbox"] + label {
                    right: 26px;
                }
            }

            &.hidden {
                display: none;
            }
        }

        .exclude.disabled {
            filter: opacity(0.5);

            .toggle,
            .widget {
                cursor: default;
            }

            i {
                color: var(--text-dark);
            }
        }
    }

    .substitutions,
    .modifier-container {
        display: flex;
        flex-direction: column;

        & + hr {
            margin-top: 0;
        }

        .dialog-row {
            border-bottom: 1px solid rgba(black, 0.1);

            &:last-child {
                border-bottom: none;
            }

            .tag {
                background-color: var(--sub);
                border-radius: 2px;
                box-shadow: inset 0 0 0 1px rgba(black, 0.25);
                color: var(--text-light);
                font-family: var(--sans-serif);
                font-size: var(--font-size-10);
                letter-spacing: 0.5px;
                padding: 4px 8px;
                text-transform: uppercase;
                width: fit-content;
            }
        }
    }

    .total-mod {
        font-weight: 700;
        padding: 0;
    }

    .roll-mode-panel {
        display: flex;
        flex-wrap: nowrap;
        align-items: stretch;
        justify-content: space-between;
        white-space: nowrap;
        gap: 8px;

        label {
            display: flex;
            align-items: center;
        }

        .roll-mode {
            flex: 1;
            select {
                border-radius: 2px;
                cursor: pointer;
                height: 1.5em;
                margin-left: 8px;
                width: 100%;
            }
        }
    }

    .roll {
        color: var(--text-light);
        background-color: var(--secondary);

        .damage.color,
        i {
            // override the global damage color styling
            color: var(--text-light) !important;
        }
    }

    .add-entry-row {
        display: flex;
        flex-wrap: nowrap;
        align-items: stretch;
        gap: 2px;

        select,
        input {
            height: auto;
            border-radius: 2px;
        }
        button {
            line-height: 1;
            margin: 0;
            padding: 4px 6px;
            text-transform: uppercase;
            flex: 0 0 min-content;
            font-weight: 700;
            font-size: 0.75rem;
        }

        .add-modifier-name {
            flex: 1;
        }
        .add-modifier-type {
            flex: 0 0 min-content;
        }
        .add-modifier-value {
            flex: 0 0 4ch;
            text-align: right;
        }
    }
}

.dice-checks {
    .fate {
        display: flex;
        justify-content: space-evenly;
        align-items: center;

        label {
            cursor: pointer;
        }
    }
}

.dialog.trick-magic-item {
    .dialog-content {
        p {
            font-weight: normal;
        }
    }
    .dialog-buttons {
        flex-direction: column;
    }
}

.damage-dialog {
    .dialog-row {
        .value {
            flex-basis: 4rem;
        }

        .dice-type,
        .modifier-type {
            background: none;
            white-space: nowrap;

            .icon-container {
                white-space: nowrap;

                i {
                    vertical-align: middle;
                    text-align: start;
                    font-size: 1rem;
                }
            }
        }

        .no-mod {
            filter: opacity(0.7);
        }

        .damage {
            padding: 2px 4px;
        }
    }

    .dice .dialog-row {
        gap: 1.5rem;

        .value {
            flex: 1 0 0;
            gap: 2px;
            justify-content: end;
        }
    }

    .add-modifier-panel {
        flex-wrap: wrap;

        .add-modifier-name {
            flex-basis: 100%;
        }

        .add-modifier-value {
            flex: 1;
        }
    }

    .add-dice-panel {
        justify-content: end;

        .add-dice-count {
            flex: 0 0 4ch;
            text-align: end;
        }
    }
}
