{"name":"Treat Wounds Macro","permission":{"default":0,"gE95JAZb6BOLkaNX":3},"type":"script","flags":{},"scope":"global","command":"let toChat = (content, rollString) => {\r\n    let chatData = {\r\n        user: game.user.id,\r\n        content,\r\n        speaker: ChatMessage.getSpeaker(),\r\n    }\r\n    ChatMessage.create(chatData, {})\r\n    if (rollString) {\r\n        let roll = new Roll(rollString).roll();\r\n        chatData = {\r\n            ...chatData,\r\n            flavor: \"Treat Wounds Result\",\r\n            type: CONST.CHAT_MESSAGE_TYPES.ROLL,\r\n            roll\r\n          }\r\n        ChatMessage.create(chatData, {})\r\n    }\r\n    \r\n}\r\n\r\nconst handleCrits = (roll) => roll === 1 ? -10 : (roll === 20 ? 10 : 0);\r\n\r\nlet rollTreatWounds = (args) => {\r\n    let {DC, bonus, med, name} = args;\r\n\r\n    const roll = new Roll(`d20`).roll().total;\r\n    const crit = handleCrits(roll)\r\n\r\n    let message = `${name} Treats Wounds at a DC ${DC}... they roll a [[${roll}+${med.value}]] and`;\r\n\r\n    if (roll + crit + med.value >= DC+10) {\r\n        toChat(`${message} critically succeed!`, `4d8+${bonus}`);\r\n    } else if (roll+crit + med.value >= DC) {\r\n        toChat(`${message} succeed.`, `2d8+${bonus}`);\r\n    } else if (roll + crit + med.value < DC-10) {\r\n        toChat(`${message} critically fail! The target takes damage.`, '1d8');\r\n    } else if (roll+crit + med.value < DC) {\r\n        toChat(`${message} fail.`);\r\n    }\r\n    \r\n}\r\n\r\nlet applyChanges = false;\r\nnew Dialog({\r\n  title: `Treat Wounds`,\r\n  content: `\r\n    <form>\r\n      <div class=\"form-group\">\r\n        <label>Medicine DC:</label>\r\n        <select id=\"dc-type\" name=\"dc-type\">\r\n          <option value=\"trained\">Trained DC 15</option>\r\n          <option value=\"expert\">Expert DC 20, +10 Healing</option>\r\n          <option value=\"master\">Master DC 30, +30 Healing</option>\r\n          <option value=\"legendary\">Legendary DC 40, +50 Healing</option>\r\n        </select>\r\n\r\n        <label>Modifier:</label>\r\n        <input id=\"modifier\" name=\"modifier\" type=\"number\"/>\r\n      </div>\r\n    </form>\r\n    `,\r\n  buttons: {\r\n    yes: {\r\n      icon: \"<i class='fas fa-check'></i>\",\r\n      label: `Treat Wounds`,\r\n      callback: () => applyChanges = true\r\n    },\r\n    no: {\r\n      icon: \"<i class='fas fa-times'></i>\",\r\n      label: `Cancel`\r\n    },\r\n  },\r\n  default: \"yes\",\r\n  close: html => {\r\n    if (applyChanges) {\r\n      for ( let token of canvas.tokens.controlled ) {\r\n        const {med} = token.actor.data.data.skills;\r\n        const {name} = token;\r\n        let prof = html.find('[name=\"dc-type\"]')[0].value || \"trained\";\r\n        let mod = html.find('[name=\"modifier\"]')[0].value || 0;\r\n        if (prof === 'legendary') {\r\n            if (med.rank >= 4) {\r\n                return rollTreatWounds({DC: 40+mod, bonus: 50, med, name});\r\n            }\r\n            prof = 'master';\r\n        } \r\n        if (prof === 'master') {\r\n            if (med.rank >= 3) {\r\n                return rollTreatWounds({DC: 30+mod, bonus: 30, med, name});\r\n            }\r\n            prof = 'expert';\r\n        }\r\n        if (prof === 'expert') {\r\n            if (med.rank >= 2) {\r\n                return rollTreatWounds({DC: 20+mod, bonus: 10, med, name});\r\n            }\r\n            prof = 'trained';\r\n        }\r\n        if (prof === 'trained') {\r\n            if (med.rank >= 1) {\r\n                return rollTreatWounds({DC: 15+mod, bonus: 0, med, name});\r\n            }\r\n        }\r\n        toChat(`${name} is not trained in Medicine, and doesn't know how to treat wounds!`);\r\n        return;\r\n      }\r\n    }\r\n  }\r\n}).render(true);","author":"gE95JAZb6BOLkaNX","img":"icons/svg/regen.svg","actorIds":[],"_id":"YG1p4kWTh2I3joBV"}
