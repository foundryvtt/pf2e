{
    "_id": "llVFZ31Zn31d8VV2",
    "actorIds": [],
    "author": "roj7GDwXR8ctiMDl",
    "command": "/*\n  This implementation expects:\n  the instinct class features to have toggleRule element ac and damage modifiers\n  giant instinct has set the oversized toggle - this is currently player responsability - pending condition rule elements\n\n*/\n(async () => {\n    if (!actor) {\n        ui.notifications.warn(\"Please select a token\");\n        return false;\n    }\n\n    let functionMap = {\n        \"Animal Instinct\" : applyBestialInstinct,\n        \"Giant Instinct\" : applyGiantInstinct,\n        \"Spirit Instinct\" : applySpiritInstinct,\n        \"Dragon Instinct\" : applyDragonInstinct,\n        \"Fury Instinct\" : applyRageEffect\n    }\n\n    //If an instinct feat is present then\n    let hasRageInstinct = actor.data.items.filter(item => item.type === \"feat\").find(feat => feat.name.includes(\"Instinct\"));\n    if (hasRageInstinct) {\n        console.log(`LOOKS LIKE YOU HAVE: ${hasRageInstinct.name}`)\n        await functionMap[hasRageInstinct.name]()\n    }\n})();\n\n// remove rage effect and toggle off rage bonus and taken effect\nasync function removeRageEffect () {\n    let hasRageEffect = actor.items.find(item => item.type === \"effect\" && item.name.includes(\"Effect: Rage\"));\n    if (hasRageEffect){\n        console.log(hasRageEffect);\n        hasRageEffect.delete();\n        actor.disableRollOption(\"all\", \"rage\")\n        if (token.data.effects.includes(\"systems/pf2e/icons/features/classes/rage.jpg\")) {\n            token.toggleEffect(\"systems/pf2e/icons/features/classes/rage.jpg\");\n        }\n        return true\n    }\n    console.log(\"NO RAGE FOUND\");\n    return false\n}\n\nasync function applyRageEffect(){\n    let ragePresent = await removeRageEffect()\n    console.log(ragePresent)\n    if (!ragePresent){\n        actor.enableRollOption(\"all\", \"rage\")\n        if (!token.data.effects.includes(\"systems/pf2e/icons/features/classes/rage.jpg\")) {\n            token.toggleEffect(\"systems/pf2e/icons/features/classes/rage.jpg\");\n        }\n        let rageEffect = game.items.getName(\"Effect: Rage\").data\n        console.log(rageEffect)\n        await actor.createOwnedItem(rageEffect)\n    }\n}\n\nasync function applySpiritInstinct(){\n    //TODO:- add damageType to damage rule in class feature based on user choice\n    applyRageEffect();\n\n}\n\nasync function applyDragonInstinct(){\n    //TODO:- add damageType to damage rule in class feature based on user choice\n    applyRageEffect();\n\n}\n\nasync function applyGiantInstinct(){\n    let clumsyCondition = actor.items.find(i=>i.name===\"Clumsy\")\n    if (!removeRageEffect()){\n        applyRageEffect();\n        if (!item){\n            ui.notifications.warn(\"Apply clumsy 1 if wielding obversized weapon\")\n        }\n    } else {\n        // Remove clumsy\n\t    await PF2eConditionManager.removeConditionFromToken(clumsyCondition.data._id, token)\n        item.delete()\n    }\n}\n\nasync function applyBestialInstinct(){\n    //check if rage already present - remove natural weapons and then exit\n    let keyword = \"-Animal Instinct-\"\n    if (removeRageEffect()){\n        let foundNaturalWeapons = token.actor.data.items.filter(item => item.type === 'weapon').filter(weapon => weapon.name.includes(keyword));\n        if (foundNaturalWeapons.length){\n            foundNaturalWeapons.forEach(foundNaturalWeapon=>actor.deleteOwnedItem(foundNaturalWeapon._id))\n            return true\n        }\n        return true\n    }\n\n    //apply rage effect\n    let rageEffect = game.items.getName(\"Effect: Rage Animal Instinct\").data\n    await actor.createOwnedItem(rageEffect)\n    //Ask player their animal\n    let animalChoices = {\n        \"Ape\": [{\"name\":\"Fist\", \"die\":\"d10\", \"damageType\":\"B\", \"traits\": [\"Grapple\", \"unarmed\"]}],\n        \"Bear\":[{\"name\":\"Jaws\", \"die\": \"d10\", \"damageType\":\"piercing\", \"traits\":[\" Unarmed\"]},\n                {\"name\":\"Claw\", \"die\": \"d6\", \"damageType\": \"slashing\",\"Traits\":[\" Agile\", \"unarmed\"]}],\n        \"Frog\":[{\"name\":\"Jaws\", \"die\": \"d10\", \"damageType\":\"B\", \"traits\":[\" Unarmed\"]},\n                {\"name\":\"Tongue\", \"die\": \"d4\", \"damageType\": \"B\",\"Traits\":[\" Agile\", \"unarmed\"]}],\n        \"Cat\":[{\"name\":\"Jaws\", \"die\": \"d10\", \"damageType\":\"piercing\", \"traits\":[\" Unarmed\"]},\n                {\"name\":\"Claw\", \"die\": \"d6\", \"damageType\": \"slashing\",\"Traits\":[\" Agile\", \"unarmed\"]}],\n        \"Bull\": [{\"name\":\"Horn\", \"die\":\"d10\", \"damageType\":\"piercing\", \"traits\": [\"Shove\", \"unarmed\"]}],\n        \"Deer\": [{\"name\":\"Antler\", \"die\":\"d10\", \"damageType\":\"piercing\", \"traits\": [\"Grapple\", \"unarmed\"]}],\n        \"Shark\": [{\"name\":\"Jaws\", \"die\":\"d10\", \"damageType\":\"piercing\", \"traits\": [\"Grapple\", \"unarmed\"]}],\n        \"Snake\": [{\"name\":\"Fangs\", \"die\":\"d10\", \"damageType\":\"piercing\", \"traits\": [\"Grapple\", \"unarmed\"]}],\n        \"Wolf\": [{\"name\":\"Fangs\", \"die\":\"d10\", \"damageType\":\"piercing\", \"traits\": [\"Trip\", \"unarmed\"]}]\n    }\n    let animalChoice = \"\"\n    let animalButtons = {}\n    for (let animal of Object.keys(animalChoices)){\n        animalButtons[animal] = {label : animal, callback: () => animalChoice = animal}\n    }\n\n    new Dialog({\n        title: \"Select your animal\",\n        buttons:  animalButtons,\n        close: html => {\n            toggleNaturalWeapons(keyword, animalChoice, animalChoices[animalChoice])\n        },\n        default: \"Cancel\"\n    }).render(true);\n}\n\nasync function toggleNaturalWeapons(keyword, animalName, naturalWeapons){\n    let fist_img = \"systems/pf2e/icons/equipment/weapons/fist.jpg\"\n    //Create only the items that we need\n    let weaponAbility = {\"label\": \"Offensive Ability\", \"type\":\"String\", \"value\":\"str\"}\n    for (let naturalWeapon of naturalWeapons){\n        // Add -Animal Instinct- to the name will make for easier deletion later\n        let naturalWeaponName = `${keyword} ${animalName} ${naturalWeapon.name}`\n        let naturalWeaponItem = {\n            \"type\":\"weapon\", \"effects\":[], \"name\":naturalWeaponName, img:fist_img,\n            \"data.weaponType.value\" : \"unarmed\", \"data.group\":\"brawling\", \"data.ability\":weaponAbility,\n            \"data.damage.damageType\":naturalWeapon.damageType, \"data.damage.die\": naturalWeapon.die,\n            \"data.traits.label\": \"Weapon Traits\", \"data.traits.value\": naturalWeapon.traits\n        }\n        await actor.createEmbeddedEntity(\"OwnedItem\", naturalWeaponItem)\n    }\n}",
    "flags": {},
    "img": "systems/pf2e/icons/features/classes/rage.jpg",
    "name": "Rage-feat-rules",
    "permission": {
        "default": 0
    },
    "scope": "global",
    "type": "script"
}