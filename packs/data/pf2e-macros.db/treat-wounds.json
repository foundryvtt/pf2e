{
    "_id": "6duZj0Ygiqv712rq",
    "actorIds": [],
    "author": "4rlSA43v1xPa1vsy",
    "command": "function CheckFeat(slug) {\n    if (token.actor.items.find((i) => i.data.data.slug === slug && i.type === 'feat')) {\n        return true;\n    }\n    return false;\n}\nconst rollTreatWounds = async ({ DC, bonus, med, riskysurgery }) => {\n    const options = actor.getRollOptions(['all', 'skill-check', 'medicine']);\n\n    options.push('treat wounds');\n    options.push('action:treat-wounds');\n\n    const dc = {\n        value: DC,\n    };\n    if (riskysurgery) {\n        dc.modifiers = {\n            success: 'one-degree-better',\n        };\n    }\n\n    med.roll({\n        dc: dc,\n        event: event,\n        options: options,\n        callback: (roll) => {\n            let healFormula, successLabel;\n            const magicHands = CheckFeat('magic-hands');\n\n            const bonusString = bonus > 0 ? `+ ${bonus}` : '';\n            if (roll.data.degreeOfSuccess === 3) {\n                healFormula = magicHands ? `32${bonusString}` : `4d8${bonusString}`;\n                successLabel = 'Critical Success';\n            } else if (roll.data.degreeOfSuccess === 2) {\n                healFormula = magicHands ? `16${bonusString}` : `2d8${bonusString}`;\n                successLabel = 'Success';\n            } else if (roll.data.degreeOfSuccess === 1) {\n                successLabel = 'Failure';\n            } else if (roll.data.degreeOfSuccess === 0) {\n                healFormula = '1d8';\n                successLabel = 'Critical Failure';\n            }\n            if (riskysurgery) {\n                healFormula = roll.data.degreeOfSuccess > 1 ? `${healFormula}-1d8` : healFormula ? `2d8` : `1d8`;\n            }\n            if (healFormula !== undefined) {\n                const healRoll = new Roll(healFormula).roll();\n                const rollType = roll.data.degreeOfSuccess > 1 ? 'Healing' : 'Damage';\n                ChatMessage.create(\n                    {\n                        user: game.user.id,\n                        type: CHAT_MESSAGE_TYPES.ROLL,\n                        flavor: `<strong>${rollType} Roll: Treat Wounds</strong> (${successLabel})`,\n                        roll: healRoll,\n                        speaker: ChatMessage.getSpeaker(),\n                    },\n                    {},\n                );\n            }\n        },\n    });\n};\n\nfunction applyChanges($html) {\n    for (const token of canvas.tokens.controlled) {\n        var { med } = token.actor.data.data.skills;\n        const { name } = token;\n        const mod = parseInt($html.find('[name=\"modifier\"]').val()) || 0;\n        const requestedProf = parseInt($html.find('[name=\"dc-type\"]')[0].value) || 1;\n        const riskysurgery = $html.find('[name=\"risky_surgery_bool\"]')[0]?.checked;\n        const skill = $html.find('[name=\"skill\"]')[0]?.value;\n        if (skill === 'cra') {\n            med = token.actor.data.data.skills['cra'];\n        }\n        const usedProf = requestedProf <= med.rank ? requestedProf : med.rank;\n        if (skill === 'nat') {\n            med = token.actor.data.data.skills['nat'];\n        }\n        const medicBonus = CheckFeat('medic-dedication') ? (usedProf - 1) * 5 : 0;\n        const roll = [\n            () => ui.notifications.warn(`${name} is not trained in Medicine and doesn't know how to treat wounds.`),\n            () => rollTreatWounds({ DC: 15 + mod, bonus: 0 + medicBonus, med, riskysurgery }),\n            () => rollTreatWounds({ DC: 20 + mod, bonus: 10 + medicBonus, med, riskysurgery }),\n            () => rollTreatWounds({ DC: 30 + mod, bonus: 30 + medicBonus, med, riskysurgery }),\n            () => rollTreatWounds({ DC: 40 + mod, bonus: 50 + medicBonus, med, riskysurgery }),\n        ][usedProf];\n\n        roll();\n    }\n}\n\nif (token === undefined) {\n    ui.notifications.warn('No token is selected.');\n} else {\n    const chirurgeon = CheckFeat('chirurgeon')\n    const naturalMedicine = CheckFeat('natural-medicine')\n    const dialog = new Dialog({\n        title: 'Treat Wounds',\n        content: `\n<div>Select a target DC. Remember that you can't attempt a heal above your proficiency. Attempting to do so will downgrade the DC and amount healed to the highest you're capable of.</div>\n<hr/>\n<form>\n${\n    chirurgeon || naturalMedicine\n        ? `\n<div class=\"form-group\">\n<label>Treat Wounds Skill:</label>\n\n<select id=\"skill\" name=\"skill\">\n<option value=\"med\">Medicine</option>\n\n${\n    chirurgeon\n        ? `<option value=\"cra\">Crafting</option>`\n        : ``\n}\n${\n    naturalMedicine\n        ? `<option value=\"nat\">Nature</option>`\n        : ``\n}\n` : ``\n}\n</select>\n</div>\n<div class=\"form-group\">\n<label>Medicine DC:</label>\n<select id=\"dc-type\" name=\"dc-type\">\n<option value=\"1\">Trained DC 15</option>\n<option value=\"2\">Expert DC 20, +10 Healing</option>\n<option value=\"3\">Master DC 30, +30 Healing</option>\n<option value=\"4\">Legendary DC 40, +50 Healing</option>\n</select>\n</div>\n<div class=\"form-group\">\n<label>DC Modifier:</label>\n<input id=\"modifier\" name=\"modifier\" type=\"number\"/>\n</div>\n${\n    CheckFeat('risky-surgery')\n        ? `<div class=\"form-group\">\n<label>Risky Surgery</label>\n<input type=\"checkbox\" id=\"risky_surgery_bool\" name=\"risky_surgery_bool\"></input>\n</div>`\n        : ``\n}\n</form>\n`,\n        buttons: {\n            yes: {\n                icon: `<i class=\"fas fa-hand-holding-medical\"></i>`,\n                label: 'Treat Wounds',\n                callback: applyChanges,\n            },\n            no: {\n                icon: `<i class=\"fas fa-times\"></i>`,\n                label: 'Cancel',\n            },\n        },\n        default: 'yes',\n    });\n    dialog.render(true);\n}\n",
    "flags": {},
    "img": "icons/svg/regen.svg",
    "name": "Treat Wounds",
    "permission": {
        "default": 0
    },
    "scope": "global",
    "type": "script"
}
