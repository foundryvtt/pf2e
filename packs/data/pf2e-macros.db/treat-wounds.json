{
    "_id": "dWV8ypUwazJBsj5n",
    "actorIds": [],
    "author": "M6L6STuBiXTluEz7",
    "command": "const rollTreatWounds = async ({DC, bonus, med, name}) => {\n  const options = actor.getRollOptions([\n    \"all\",\n    \"skill-check\",\n    \"medicine\",\n  ]);\n\n  options.push('treat wounds');\n  options.push('action:treat-wounds');\n\n  med.roll(event, options, (roll) => {\n    const baseRoll = roll.terms[0].results[0].result;\n    const crit = baseRoll === 1  ?\n                   -1 :\n                 baseRoll === 20 ?\n                   1 : 0;\n\n    const success = roll.total >= DC + 10 ?\n                      2 :\n                    roll.total >= DC      ?\n                      1 :\n                    roll.total <= DC - 10 ?\n                     -1 : 0;\n\n    let healFormula, successLabel;\n\n    const bonusString = bonus > 0 ? `+ ${bonus}` : \"\";\n    if (success + crit > 1) {\n      healFormula = `4d8${bonusString}`;\n      successLabel = \"Critical Success\";\n    } else if (success + crit === 1) {\n      healFormula = `2d8${bonusString}`;\n      successLabel = \"Success\";\n    } else if (success + crit < 0) {\n      healFormula = \"1d8\";\n      successLabel = \"Critical Failure\";\n    }\n    if (healFormula !== undefined) {\n      const healRoll = new Roll(healFormula).roll();\n      const rollType = success > 0 ? \"Healing\" : \"Damage\";\n      ChatMessage.create({\n        user: game.user.id,\n        type: CHAT_MESSAGE_TYPES.ROLL,\n        flavor: `<strong>${rollType} Roll: Treat Wounds</strong> (${successLabel})`,\n        roll: healRoll,\n        speaker: ChatMessage.getSpeaker()\n      }, { });\n    }\n  })\n};\n\n\nconst applyChanges = ($html) => {\n  for (const token of canvas.tokens.controlled) {\n    const skillname = $html.find('[name=\"skill-choice\"]')[0].value || \"med\";\n    const med = token.actor.data.data.skills[skillname];\n    const {name} = token;\n    \n    const mod = parseInt($html.find('[name=\"modifier\"]').val()) || 0;\n    const requestedProf = parseInt($html.find('[name=\"dc-type\"]')[0].value) || 1;\n    const usedProf = requestedProf <= med.rank ? requestedProf : med.rank;\n    const roll = [\n      () => ui.notifications.warn(`${name} is not trained in `+med.name+` and doesn't know how to treat wounds.`),\n      () => rollTreatWounds({DC: 15 + mod, bonus: 0, med, name}),\n      () => rollTreatWounds({DC: 20 + mod, bonus: 10, med, name}),\n      () => rollTreatWounds({DC: 30 + mod, bonus: 30, med, name}),\n      () => rollTreatWounds({DC: 40 + mod, bonus: 50, med, name})\n    ][usedProf];\n\n    roll();\n  }\n};\n\nif (token === undefined) {\n  ui.notifications.warn(\"No token is selected.\");\n} else {\n  const dialog = new Dialog({\n    title: \"Treat Wounds\",\n    content: `\n    <div>Select a target DC. Remember that you can't attempt a heal above your proficiency. Attempting to do so will downgrade the DC and amount healed to the highest you're capable of.</div>\n    <hr/>\n    <form>\n        <div class=\"form-group-stacked\">\n            <label for=\"dc-type\">Medicine DC:</label>\n            <select id=\"dc-type\" name=\"dc-type\">\n                <option value=\"1\">Trained DC 15</option>\n                <option value=\"2\">Expert DC 20, +10 Healing</option>\n                <option value=\"3\">Master DC 30, +30 Healing</option>\n                <option value=\"4\">Legendary DC 40, +50 Healing</option>\n            </select>\n            <label for=\"modifier\">DC Modifier:</label>\n            <input id=\"modifier\" name=\"modifier\" type=\"number\"/>\n            <label for=\"skill-choice\">Choose Skill:</label>\n            <select id=\"skill-choice\" name=\"skill-choice\">\n                <option value=\"med\">Medicine</option>\n                <option value=\"nat\">Nature (Natural Medicine)</option>\n                <option value=\"cra\">Craft (Chirurgeon)</option>\n            </select>\n        </div>\n    </form>\n`,\n    buttons: {\n      yes: {\n        icon: `<i class=\"fas fa-hand-holding-medical\"></i>`,\n        label: \"Treat Wounds\",\n        callback: applyChanges\n      },\n      no: {\n        icon: `<i class=\"fas fa-times\"></i>`,\n        label: \"Cancel\"\n      },\n    },\n    default: \"yes\"\n  });\n  dialog.render(true);\n}",
    "flags": {
        "furnace": {
            "runAsGM": false
        }
    },
    "img": "icons/svg/regen.svg",
    "name": "Treat Wounds",
    "permission": {
        "default": 0
    },
    "scope": "global",
    "type": "script"
}
