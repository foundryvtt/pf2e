{
    "_id": "4nEbRlo2cB9KkK7T",
    "actorIds": [],
    "author": "uAvrJeywnWLwQIhl",
    "command": "let ITEM_UUID = 'Compendium.pf2e.feat-effects.gYpy9XBPScIlY93p'; // Stance: Mountain Stance\n\nfunction checkFeat(slug) {\n    if (token.actor.items.find((i) => i.data.data.slug === slug && i.type === 'feat')) {\n        return true;\n    }\n    return false;\n}\n\nif (checkFeat('mountain-stronghold')) {\n    ITEM_UUID = 'Compendium.pf2e.feat-effects.LXbVcutEIW8eWZEz';\n}\nif (checkFeat('mountain-quake')) {\n    ITEM_UUID = 'Compendium.pf2e.feat-effects.wuERa7exfXXl6I37';\n}\n\n(async () => {\n    const effect = duplicate(await fromUuid(ITEM_UUID));\n    effect.flags.core = effect.flags.core ?? {};\n    effect.flags.core.sourceId = effect.flags.core.sourceId ?? ITEM_UUID;\n    for await (const token of canvas.tokens.controlled) {\n        let existing = token.actor.items.find(\n            (i) => i.type === 'effect' && i?.data?.flags?.core?.sourceId === ITEM_UUID,\n        );\n        if (existing) {\n            token.actor.deleteOwnedItem(existing._id);\n        } else {\n            let clothingPotency = 0;\n            const clothing = token.actor.items\n                .filter((item) => item.data.type === 'armor')\n                ?.filter((item) => item.data.data.slug === 'clothing-explorers')\n                ?.find((item) => item.data.data.equipped.value);\n            if (clothing) {\n                clothingPotency = parseInt(clothing.data?.data?.potencyRune?.value);\n            }\n            let bracers = token.actor.items\n                .filter((item) => item.data.type === 'equipment')\n                ?.filter((item) => item.data.data.slug === 'bracers-of-armor-i')\n                ?.filter((item) => item.data.data.equipped.value)\n                ?.find((item) => item.data.data.invested.value)\n                ? 1\n                : 0;\n            bracers = token.actor.items\n                .filter((item) => item.data.type === 'equipment')\n                ?.filter((item) => item.data.data.slug === 'bracers-of-armor-ii')\n                ?.filter((item) => item.data.data.equipped.value)\n                ?.find((item) => item.data.data.invested.value)\n                ? 2\n                : bracers;\n            bracers = token.actor.items\n                .filter((item) => item.data.type === 'equipment')\n                ?.filter((item) => item.data.data.slug === 'bracers-of-armor-iii')\n                ?.filter((item) => item.data.data.equipped.value)\n                ?.find((item) => item.data.data.invested.value)\n                ? 3\n                : bracers;\n            let mageArmorBonus = 0;\n            const mageArmor = token.actor.items\n                .filter((item) => item.data.type === 'effect')\n                ?.find((item) => item.data.data.slug === 'spell-effect-mage-armor');\n            if (mageArmor) {\n                mageArmorBonus = mageArmor.data.data.level.value === 10 ? 3 : mageArmor.data.data.level.value >= 5 ? 2 : 1;\n            }\n            let itemBonus = Math.max(bracers, clothingPotency, mageArmorBonus);\n            const rule = effect.data.rules.find(\n                (r) => r.selector === 'ac' && r.key === 'PF2E.RuleElement.FlatModifier',\n            );\n            if (rule) {\n                rule.value = rule.value + itemBonus;\n            }\n            token.actor.createOwnedItem(effect);\n        }\n    }\n})();\n",
    "flags": {},
    "img": "systems/pf2e/icons/features/feats/mountain-stance.webp",
    "name": "Toggle Mountain Stance",
    "permission": {
        "default": 0
    },
    "scope": "global",
    "type": "script"
}
